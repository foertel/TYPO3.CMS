namespace <namespace>;
use TYPO3\CMS\Extbase\Persistence\QueryResultInterface;

/**
 * This class is generated by the LazyProxyFactory of Extbase. Don't change the file by yourself!
 */
class <proxyClassName> extends \<className> implements \TYPO3\CMS\Extbase\Persistence\Generic\LoadingStrategyInterface {
	private $parentObject;
	private $propertyName;
	private $fieldValue;
	private $parentQueryResult;


	public function __construct($parentObject, $propertyName, $fieldValue) {
		$this->parentObject = $parentObject;
		$this->propertyName = $propertyName;
		$this->fieldValue = $fieldValue;
	}

	<methods>

	/**
	 * @param QueryResultInterface $queryResult
	 *
	 * @return void
	 */
	public function setParentQueryResult(QueryResultInterface $queryResult) {
		$this->parentQueryResult = $queryResult;
	}

	/**
	 * Returns the parentObject so we can populate the proxy.
	 *
	 * @return object
	 */
	public function _getParentObject() {
		return $this->parentObject;
	}

	/**
	 * Returns the fieldValue so we can fetch multiple LazyObjects in one query.
	 *
	 * @return mixed
	 */
	public function _getFieldValue() {
		return $this->fieldValue;
	}
}

